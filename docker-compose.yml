version: '3.8'

services:

  zookeeper:
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: strimzi/kafka:0.11.3-kafka-2.1.0
    container_name: kafka
    hostname: kafka
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      #      KAFKA_ADVERTISED_HOST_NAME: kafka
      #      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      #      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  mongo1:
    image : mongo
    container_name: mongo1
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/mongo/data1/database:/data/db
      - ./bin/rs-init.sh:/scripts/rs-init.sh
    networks:
      - mongors-network
    links:
      - mongo2
      - mongo3
    ports:
      - "27021:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo2:
    image : mongo
    container_name: mongo2
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/mongo/data2/database:/data/db
    networks:
      - mongors-network
    ports:
      - "27022:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo3:
    image : mongo
    container_name: mongo3
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/mongo/data3/database:/data/db
    networks:
      - mongors-network
    ports:
      - "27023:27017"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

networks:
  mongors-network:
    driver: bridge